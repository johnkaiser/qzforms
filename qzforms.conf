# This is the config file for qzfcgi.
# 
# QZ_TAGGER_SOCKET must be in a directory that the server
# can create files in.  It is used for interproccess communication.
QZ_TAGGER_SOCKET = run/tagger.sock

# QZ_NUMBER_OF_USERS is likely less important than it sounds.
# It is a soft limit used to scale internal data structures.
QZ_NUMBER_OF_USERS=42

# QZ_NUMBER_OF_THREADS is the number or fastcgi connections that
# can be executing at one time, including those waiting for postgres.  
QZ_NUMBER_OF_THREADS=20

# QZ_LOG_FILENAME must be in a directory that the server
# can create files in.  Each request will create many lines.
# Will be re-created if deleted or renamed.
QZ_LOG_FILENAME=logs/qz.log

# If the log file is larger than MAX_LOG_FILE_SIZE 
# then housekeeper will rotate the log. e.g. qz.log.1
MAX_LOG_FILE_SIZE = 10000000

# Housekeeper will keep MAX_LOG_FILE_COUNT log files
# before deleting the oldest 
MAX_LOG_FILE_COUNT = 10

# QZ_TEMPLATE_PATH is a directory with at least read 
# permission.  Every HTML page (not everything is one)
# starts with a template from here.  The minimum template
# is "<div id='qz'></div>".
# Templates must be pedantically valid XML.
QZ_TEMPLATE_PATH=templates

# QZ_SERVER_TOKEN and QZ_SERVER_KEY are used to prove the validaty of 
# etag data.  If not set here, then random values are created, which
# is the prefered behavior for single server installations.
# Only set them if multiple servers are working together and one
# must validate sessions, forms, or cache served from other
# instances. Sharing between different architectures is not supported.
#
# QZ_SERVER_KEY is 16 bytes as 32 hex characters.
# QZ_SERVER_TOKEN is 8 bytes as 16 hex characters.
# You may use "openssl rand -hex 16" and "openssl rand -hex 8" to create.
#
#QZ_SERVER_KEY=X123456789abcdef0123456789abcdef
#QZ_SERVER_TOKEN=X123456789abcdef

# QZ_SESSION_INACTIVITY_TIMEOUT is an integer greater than 0
# that is the number of seconds before a session may be terminated.
QZ_SESSION_INACTIVITY_TIMEOUT = 3600

# QZ_FORM_DURATION is an integer that is the number of seconds
# a form is valid without calling refresh on it for an extension.
QZ_FORM_DURATION = 180

# QZ_HOUSEKEEPER_NAP_TIME is the time that must pass before the
# housekeeper starts the next cleanup task.
QZ_HOUSEKEEPER_NAP_TIME = 120

# Postgresql uses a number of environment variables to setup the
# database connection.  If any are defined here, they are passed
# to pg.  Refer to Postgres documentation on their use and meaning.
# http://www.postgresql.org/docs/9.3/static/libpq-envars.html
# PGAPPNAME is set to qzforms if not explicitly set.
# PGDATABASE is almost always required, PGHOST, and PGPORT are also common.
# Setting user and password here is not recommended.
#
# PGHOST
# PGHOSTADDR
# PGPORT
# PGDATABASE
# PGPASSFILE
# PGSERVICE
# PGSERVICEFILE
# PGREALM
# PGOPTIONS
# PGAPPNAME
# PGSSLMODE
# PGREQUIRESSL
# PGSSLCERT
# PGSSLKEY
# PGSSLROOTCERT
# PGSSLCRL
# PGREQUIREPEER
# PGGSSLIB
# PGCONNECT_TIMEOUT
# PGCLIENTENCODING
# PGDATASTYLE
# PGTZ
# PGGEQO



