# This is the config file for qzforms.fcgi.
#
# Values can also be set with environment variables.
# Values set in the config file take precedence over the environment.
# Set the QZ_CONFIG_FILENAME to select an alternate configuration file.
# Set the QZ_CONFIG_FILENAME environment variable to an empty string
# to skip loading the config file.
# 
# TAGGER_SOCKET must be in a directory that the server
# can create files in.  It is used for interproccess communication.
# TAGGER_SOCKET = run/tagger.sock

# NUMBER_OF_USERS is likely less important than it sounds.
# It is a soft limit used to scale internal data structures.
# NUMBER_OF_USERS=42

# NUMBER_OF_THREADS is the number of fastcgi connections that
# can be executing at one time, including those waiting for postgres.  
# NUMBER_OF_THREADS=20

# LOG_FILENAME must be in a directory that the server
# can create files in.  Each request will create many lines.
# Will be re-created if deleted or renamed.
# LOG_FILENAME=logs/qz.log

# If the log file is larger than MAX_LOG_FILE_SIZE 
# then housekeeper will rotate the log. e.g. qz.log.1
# MAX_LOG_FILE_SIZE = 1000000

# Housekeeper will keep MAX_LOG_FILE_COUNT log files
# before deleting the oldest 
# MAX_LOG_FILE_COUNT = 8

# TEMPLATE_PATH is a directory with at least read
# permission.  Every HTML page (not everything is one)
# starts with a template from here.  The minimum template
# is "<div id='qz'></div>".
# Templates must be pedantically valid XML.
# TEMPLATE_PATH=templates

# SESSION_INACTIVITY_TIMEOUT is an integer greater than 0
# that is the number of seconds before a session may be terminated.
# SESSION_INACTIVITY_TIMEOUT = 600

# FORM_DURATION is an integer that is the number of seconds
# a form is valid without calling refresh on it for an extension.
# FORM_DURATION = 180

# HOUSEKEEPER_NAP_TIME is the time that must pass before the
# housekeeper starts the next cleanup task.
# HOUSEKEEPER_NAP_TIME = 120

# The defense against dictionary attacks and failed logins is
# controlled by the maximum allowed failed logins and the
# blocking timeout. A successful  login within the last timeout
# interval will disable blocking regardless of the number of
# failures.
# MAX_FAILED_LOGINS will block the remote host after this number
# of failed logins. 0 to disable failed login tracking.
# MAX_FAILED_LOGINS = 20
# FAILED_LOGIN_BLOCK_TIMEOUT is the amount of time that the
# host will be blocked and is also the interval for counting
# failed login attempts.
# FAILED_LOGIN_BLOCK_TIMEOUT = 300

# Postgresql uses a number of environment variables to setup the
# database connection.  If any are defined here, they are passed
# to pg.  Refer to Postgres documentation on their use and meaning.
# http://www.postgresql.org/docs/9.3/static/libpq-envars.html
# PGDATABASE is almost always required, PGHOST, and PGPORT are also
# common.
# Setting PGUSER and PGPASSWORD here is not supported.
#
# PGHOST
# PGHOSTADDR
# PGPORT
# PGDATABASE
# PGPASSFILE
# PGSERVICE
# PGSERVICEFILE
# PGREALM
# PGOPTIONS
# PGAPPNAME = qzforms
# PGSSLMODE
# PGREQUIRESSL
# PGSSLCERT
# PGSSLKEY
# PGSSLROOTCERT
# PGSSLCRL
# PGREQUIREPEER
# PGGSSLIB
# PGCONNECT_TIMEOUT
# PGCLIENTENCODING
# PGDATASTYLE
# PGTZ
# PGGEQO

